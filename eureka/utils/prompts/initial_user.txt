The Python environment is {task_obs_code_string}. Never change the imports, and import crafter, not crafterGPT. Write a reward function for the following task: {task_description}.

{environment_details}

Each state is represented as a dictionary with only the following keys:

- "image": numpy.ndarray
  RGB image representation of the game state.

- "semantic": numpy.ndarray
  Symbolic representation of the game world:
  0=map_edge, 1=water, 2=grass, 3=stone, 4=path, 5=sand, 6=tree, 7=lava,
  8=coal, 9=iron, 10=diamond, 11=table, 12=furnace, 15=zombie, 
  16=skeleton, 17=arrow, 18=plant, "P"=player and "C"=cow

- inventory: dict
  Dictionary of items the player possesses:
  - health: float (current health level)
  - food: int (number of food items)
  - drink: int (number of drink items)
  - energy: float (current energy level)
  - sapling: int (number of saplings)
  - wood: int (number of wood pieces)
  - stone: int (number of stone pieces)
  - coal: int (number of coal pieces)
  - iron: int (number of iron pieces)
  - diamond: int (number of diamond pieces)
  - wood_pickaxe: int (number of wood pickaxes)
  - stone_pickaxe: int (number of stone pickaxes)
  - iron_pickaxe: int (number of iron pickaxes)
  - wood_sword: int (number of wood swords)
  - stone_sword: int (number of stone swords)
  - iron_sword: int (number of iron swords)

- player_pos: tuple
  (x,y) coordinates of the player's position in the grid.

- player_facing: tuple
  Direction vector (x,y) showing which way player is facing:
  (0,1)=north/up, (0,-1)=south/down, (1,0)=east/right, (-1,0)=west/left

- discount: float
  Discount factor for future rewards, typically between 0.0 and 1.0.

- dead: bool
  Whether the player is dead (True) or alive (False).

- action: int or str
  The action taken to reach this state, either as an integer index or string:
  'noop', 'move_left', 'move_right', 'move_up', 'move_down', 'do', 'sleep',
  'place_stone', 'place_table', 'place_furnace', 'place_plant',
  'make_wood_pickaxe', 'make_stone_pickaxe', 'make_iron_pickaxe',
  'make_wood_sword', 'make_stone_sword', 'make_iron_sword'

- view: tuple
  The size of the view window as (width, height).
